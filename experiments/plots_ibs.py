import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Replace these with actual data
bs_litlvm = [0.0049259460000000005, 0.036615748000000004, 0.047834223999999995, 0.057647386, 0.06692878999999999, 0.07643425400000001, 0.085569334, 0.09445297400000001, 0.102788104, 0.11094085599999999, 0.11966497000000001, 0.127694964, 0.135828854, 0.143152352, 0.15053720399999998, 0.15759854999999998, 0.16429151800000003, 0.17059830199999998, 0.176358156, 0.181989424, 0.187080564, 0.19211278800000003, 0.19746849400000002, 0.201908088, 0.206102474, 0.21001061000000001, 0.21388113200000003, 0.21690196, 0.21963476399999998, 0.22248169200000004]
bs_cph = [0.004916505999999999, 0.036627771999999996, 0.047947246, 0.057986132, 0.067545654, 0.0773613, 0.08694356, 0.096257008, 0.10505637999999999, 0.11373437, 0.12299730599999999, 0.13161310399999998, 0.140183338, 0.14807200599999998, 0.15603061599999998, 0.163616448, 0.17099054, 0.177799928, 0.18422817, 0.19052816199999997, 0.196327752, 0.20186699800000002, 0.207735288, 0.21289028999999998, 0.217338406, 0.22165427399999998, 0.22547015799999998, 0.22873336800000002, 0.232054882, 0.234596012]
bs_pca = [0.004927854000000001, 0.036314944, 0.047615144000000005, 0.057684150000000003, 0.067439578, 0.077154894, 0.086600232, 0.095923864, 0.10480486, 0.11352657, 0.122704572, 0.131105716, 0.13972410999999998, 0.14758824799999998, 0.155480938, 0.163202322, 0.170529294, 0.17743522, 0.183740862, 0.190155022, 0.196104726, 0.201540722, 0.20706332, 0.21239442199999997, 0.216982556, 0.22113848200000003, 0.22487481600000003, 0.22795381199999998, 0.231069056, 0.233757664]
bs_fm = [0.0049278559999999996, 0.036315058, 0.047615356000000005, 0.057684483999999994, 0.06743998999999999, 0.077155422, 0.086600898, 0.09592467200000002, 0.10480581800000002, 0.11352758599999999, 0.12270577199999999, 0.13110709199999998, 0.13972568800000001, 0.147590026, 0.155482952, 0.163204518, 0.17053168999999996, 0.177437932, 0.183743936, 0.190158454, 0.19610851999999998, 0.201545014, 0.20706803799999998, 0.21239954599999997, 0.216988322, 0.22114458600000003, 0.22488158600000002, 0.22796105, 0.23107652400000003, 0.23376519]
bs_rsf = [0.004655153979330553, 0.03770702652026558, 0.04998139939056372, 0.061246741465376585, 0.07246947437193396, 0.08314892114458779, 0.0942773116034563, 0.10428445877652258, 0.11410794872461844, 0.1244017891490073, 0.13368986057063395, 0.1434198029814168, 0.15151859216797894, 0.15974675526855955, 0.16808672870842062, 0.17487546521349706, 0.1809832585019934, 0.18763529775797547, 0.1934840017703485, 0.20015595109668197, 0.20403250362982034, 0.2085670889992298, 0.21252351873743153, 0.21518942010865058, 0.2184078018755808, 0.22265168548157402, 0.22566094933241848, 0.22710586678463532, 0.22942481409510634, 0.2324144302489259]

# Time points (in years instead of days)
t_max = 5320
time_points = np.linspace(0, t_max, 30) / 365  # Convert days to years

# Set seaborn style with white background and no grid
sns.set_style("white")

# Create the plot
plt.figure(figsize=(10, 6))

# Plot each model
plt.plot(time_points, bs_litlvm, marker='o', label='LIT-LVM', linewidth=2.2, alpha=0.9)
plt.plot(time_points, bs_cph, marker='s', label='Cox PH', linewidth=2.2, alpha=0.9)
plt.plot(time_points, bs_pca, marker='^', label='PCA-Cox', linewidth=2.2, alpha=0.9)
plt.plot(time_points, bs_fm, marker='D', label='Factorization Machine', linewidth=2.2, alpha=0.9)
plt.plot(time_points, bs_rsf, marker='D', label='RSF', linewidth=2.2, alpha=0.9)

# Labels and title
plt.xlabel("Years", fontsize=14)
plt.ylabel("Brier Score", fontsize=14)
plt.title("Brier Scores over Time", fontsize=16)

# Legend
plt.legend(fontsize=12)

# Make background white
plt.gca().set_facecolor('white')
plt.gcf().set_facecolor('white')

# Remove grid
plt.grid(False)

# Save the figure
plt.tight_layout()

# Optional: Show the plot
# plt.show()
